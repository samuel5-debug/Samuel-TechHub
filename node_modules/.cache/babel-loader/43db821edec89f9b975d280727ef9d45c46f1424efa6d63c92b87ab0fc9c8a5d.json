{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/dynamic-checklist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([{\n    id: 1,\n    name: \"First Item\"\n  }, {\n    id: 2,\n    name: \"Second Item\"\n  }, {\n    id: 3,\n    name: \"Third Item\"\n  }, {\n    id: 4,\n    name: \"Fourth Item\"\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const handleAddItem = () => {\n    if (inputValue.trim() !== '') {\n      const newItem = {\n        id: items.length + 1,\n        // simple way to generate a new id (in a real-world scenario, you'd probably have better logic for id generation)\n        name: inputValue\n      };\n      setItems([...items, newItem]);\n      setInputValue('');\n    }\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Item List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Enter item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: items.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0OYeYsyYec9HK2TkP8rcnkMOqYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","items","setItems","id","name","inputValue","setInputValue","handleAddItem","trim","newItem","length","handleInputChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","item","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/dynamic-checklist/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [items, setItems] = useState([\n    { id: 1, name: \"First Item\" },\n    { id: 2, name: \"Second Item\" },\n    { id: 3, name: \"Third Item\" },\n    { id: 4, name: \"Fourth Item\" },\n  ]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleAddItem = () => {\n    if (inputValue.trim() !== '') {\n      const newItem = {\n        id: items.length + 1,  // simple way to generate a new id (in a real-world scenario, you'd probably have better logic for id generation)\n        name: inputValue\n      };\n      setItems([...items, newItem]);\n      setInputValue('');\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Item List</h1>\n      <div className=\"input-container\">\n        <input \n          type=\"text\" \n          value={inputValue} \n          onChange={handleInputChange} \n          placeholder=\"Enter item\" \n        />\n        <button onClick={handleAddItem}>Add Item</button>\n      </div>\n      <div className=\"list-container\">\n        {items.length === 0 ? (\n          <p>No items yet!</p>\n        ) : (\n          <ul>\n            {items.map((item) => (\n              <li key={item.id}>{item.name}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}