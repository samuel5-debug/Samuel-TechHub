{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/dynamic-checklist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // you can still keep styles here if you like\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleAddItem = () => {\n    if (inputValue.trim() !== '') {\n      setItems([...items, inputValue.trim()]);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic List Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type something...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: items.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-list-message\",\n        children: \"The list is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-items\",\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-item\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dLPUah1aqPhTEjz1t77n022eOEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","items","setItems","inputValue","setInputValue","handleAddItem","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","item","index","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/dynamic-checklist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // you can still keep styles here if you like\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleAddItem = () => {\n    if (inputValue.trim() !== '') {\n      setItems([...items, inputValue.trim()]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Dynamic List Manager</h1>\n      <div className=\"input-section\">\n        <input\n          type=\"text\"\n          placeholder=\"Type something...\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button onClick={handleAddItem}>Add Item</button>\n      </div>\n\n      <div className=\"list-container\">\n        {items.length === 0 ? (\n          <p className=\"empty-list-message\">The list is empty.</p>\n        ) : (\n          <ul className=\"list-items\">\n            {items.map((item, index) => (\n              <li key={index} className=\"list-item\">{item}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MACvCF,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BV,OAAA;MAAAU,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Bd,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BV,OAAA;QACEe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAEZ,UAAW;QAClBa,QAAQ,EAAGC,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFd,OAAA;QAAQqB,OAAO,EAAEd,aAAc;QAAAG,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAENd,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BP,KAAK,CAACmB,MAAM,KAAK,CAAC,gBACjBtB,OAAA;QAAGS,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAExDd,OAAA;QAAIS,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBP,KAAK,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBzB,OAAA;UAAgBS,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEc;QAAI,GAAlCC,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CArCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}